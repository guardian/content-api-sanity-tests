// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The SanityTests stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuParameter",
      "GuLoggingStreamNameParameter",
      "GuPolicy",
      "GuPolicy",
      "GuEc2App",
      "GuCertificate",
      "GuInstanceRole",
      "GuSSMRunCommandPolicy",
      "GuDescribeEC2Policy",
      "GuLogShippingPolicy",
      "GuDistributionBucketParameter",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuAmiParameter",
      "GuHttpsEgressSecurityGroup",
      "GuAutoScalingGroup",
      "GuWazuhAccess",
      "GuApplicationLoadBalancer",
      "GuApplicationTargetGroup",
      "GuHttpsApplicationListener",
      "GuSecurityGroup",
      "GuUnhealthyInstancesAlarm",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": {
    "LoadBalancerSanitytestsDnsName": {
      "Description": "DNS entry for LoadBalancerSanitytests",
      "Value": {
        "Fn::GetAtt": [
          "LoadBalancerSanitytestsDAE5C376",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": {
    "AMISanitytests": {
      "Description": "Amazon Machine Image ID for the app sanity-tests. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueaccountservicescapigutoolsTESThostedzoneidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/account/services/capi.gutools/TEST/hostedzoneid",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueaccountvpcPRODliveidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/account/vpc/PROD-live/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "nonurgentalarmarnParameter": {
      "Default": "/account/content-api-common/alarms/non-urgent-alarm-topic",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "subnets": {
      "Default": "/account/vpc/PROD-live/subnets",
      "Description": "Subnets to deploy into",
      "Type": "AWS::SSM::Parameter::Value<List<String>>",
    },
    "urgentalarmarnParameter": {
      "Default": "/account/content-api-common/alarms/urgent-alarm-topic",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AutoScalingGroupSanitytestsASG6CEA4199": {
      "Properties": {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": {
          "Ref": "AutoScalingGroupSanitytestsLaunchConfig4A04CC45",
        },
        "MaxSize": "2",
        "MinSize": "1",
        "Tags": [
          {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "sanity-tests",
          },
          {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/content-api-sanity-tests",
          },
          {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "LoggingStreamName",
            },
          },
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "SanityTests/AutoScalingGroupSanitytests",
          },
          {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "content-api-sanity-tests",
          },
          {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
        ],
        "TargetGroupARNs": [
          {
            "Ref": "TargetGroupSanitytests819368DF",
          },
        ],
        "VPCZoneIdentifier": {
          "Ref": "subnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "AutoScalingGroupSanitytestsInstanceProfile85451A3C": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRoleSanitytests32F32A70",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupSanitytestsLaunchConfig4A04CC45": {
      "DependsOn": [
        "InstanceRoleSanitytests32F32A70",
      ],
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "AutoScalingGroupSanitytestsInstanceProfile85451A3C",
        },
        "ImageId": {
          "Ref": "AMISanitytests",
        },
        "InstanceType": "t3.micro",
        "MetadataOptions": {
          "HttpTokens": "required",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "GuHttpsEgressSecurityGroupSanitytestsB4206E9A",
              "GroupId",
            ],
          },
          {
            "Fn::GetAtt": [
              "WazuhSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash -ev

adduser --disabled-password content-api

cd /home/content-api

aws --region eu-west-1 s3 cp s3://content-api-dist/content-api-sanity-tests/TEST/sanity-tests/sanity-tests_1.0_all.deb /home/content-api/sanity-tests_1.0_all.deb
dpkg -i /home/content-api/sanity-tests_1.0_all.deb
aws --region eu-west-1 s3 cp s3://content-api-config/content-api-sanity-tests/TEST/sanity-tests/content-api-sanity-tests.conf /usr/share/sanity-tests/conf/content-api-sanity-tests.conf
ln -s /usr/share/sanity-tests /home/content-api/sanity-tests
echo JAVA_OPTS=\\"-Dpidfile.path=/var/run/sanity-tests/sanity-tests.pid -Dconfig.file=/usr/share/sanity-tests/conf/content-api-sanity-tests.conf -Dplay.http.secret.key=kkMQbRpa1ttyM0oXwlyPwd5ODNeFMv63h452itOGzWulEUipJjMfm73\\" >> /etc/default/sanity-tests
mkdir logs

systemctl start sanity-tests",
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "CertificateSanitytestsF7EC3BED": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "DomainName": "sanity-tests.capi.gutools.co.uk",
        "DomainValidationOptions": [
          {
            "DomainName": "sanity-tests.capi.gutools.co.uk",
            "HostedZoneId": {
              "Ref": "SsmParameterValueaccountservicescapigutoolsTESThostedzoneidC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "sanity-tests",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/content-api-sanity-tests",
          },
          {
            "Key": "Name",
            "Value": "SanityTests/CertificateSanitytests",
          },
          {
            "Key": "Stack",
            "Value": "content-api-sanity-tests",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "DescribeEC2PolicyFF5F9295": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleSanitytests32F32A70",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EC2Access19C43F79": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EC2Access19C43F79",
        "Roles": [
          {
            "Ref": "InstanceRoleSanitytests32F32A70",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicySanitytestsFE5FF115": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "DistributionBucketName",
                    },
                    "/content-api-sanity-tests/TEST/sanity-tests/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicySanitytestsFE5FF115",
        "Roles": [
          {
            "Ref": "InstanceRoleSanitytests32F32A70",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupSanitytestsB4206E9A": {
      "Properties": {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "sanity-tests",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/content-api-sanity-tests",
          },
          {
            "Key": "Stack",
            "Value": "content-api-sanity-tests",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueaccountvpcPRODliveidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupSanitytestsfromSanityTestsInternalIngressSecurityGroupSanitytests5FB7EB279000E2C56036": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupSanitytestsB4206E9A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "InternalIngressSecurityGroupSanitytests4BB184B2",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuHttpsEgressSecurityGroupSanitytestsfromSanityTestsLoadBalancerSanitytestsSecurityGroup0A4631BB9000373F2515": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupSanitytestsB4206E9A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerSanitytestsSecurityGroup29571013",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": [
          {
            "Ref": "InstanceRoleSanitytests32F32A70",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "InstanceRoleSanitytests32F32A70": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": [
          {
            "Key": "App",
            "Value": "sanity-tests",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/content-api-sanity-tests",
          },
          {
            "Key": "Stack",
            "Value": "content-api-sanity-tests",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InternalIngressSecurityGroupSanitytests4BB184B2": {
      "Properties": {
        "GroupDescription": "Allow restricted ingress from CIDR ranges",
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "Allow access on port 443 from 10.0.0.0/8",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "sanity-tests",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/content-api-sanity-tests",
          },
          {
            "Key": "Stack",
            "Value": "content-api-sanity-tests",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueaccountvpcPRODliveidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "InternalIngressSecurityGroupSanityteststoSanityTestsGuHttpsEgressSecurityGroupSanitytestsD1B3AAF29000B935D275": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupSanitytestsB4206E9A",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "InternalIngressSecurityGroupSanitytests4BB184B2",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ListenerSanitytests3A57B767": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Ref": "CertificateSanitytestsF7EC3BED",
            },
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "TargetGroupSanitytests819368DF",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "LoadBalancerSanitytestsDAE5C376",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerSanitytestsDAE5C376": {
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LoadBalancerSanitytestsSecurityGroup29571013",
              "GroupId",
            ],
          },
          {
            "Fn::GetAtt": [
              "InternalIngressSecurityGroupSanitytests4BB184B2",
              "GroupId",
            ],
          },
        ],
        "Subnets": {
          "Ref": "subnets",
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "sanity-tests",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/content-api-sanity-tests",
          },
          {
            "Key": "Stack",
            "Value": "content-api-sanity-tests",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerSanitytestsSecurityGroup29571013": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB SanityTestsLoadBalancerSanitytests069E86CC",
        "Tags": [
          {
            "Key": "App",
            "Value": "sanity-tests",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/content-api-sanity-tests",
          },
          {
            "Key": "Stack",
            "Value": "content-api-sanity-tests",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueaccountvpcPRODliveidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerSanitytestsSecurityGrouptoSanityTestsGuHttpsEgressSecurityGroupSanitytestsD1B3AAF290004218EF3D": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupSanitytestsB4206E9A",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerSanitytestsSecurityGroup29571013",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ParameterStoreReadSanitytests38FB0A69": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api-sanity-tests/sanity-tests",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api-sanity-tests/sanity-tests/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleSanitytests32F32A70",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PrivateBucketAccessFC6A00AF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject",
                "s3:ListBucket",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3::*:content-api-sanity-tests-dist/*",
                "arn:aws:s3::*:content-api-es-snapshots/*",
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PrivateBucketAccessFC6A00AF",
        "Roles": [
          {
            "Ref": "InstanceRoleSanitytests32F32A70",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SSMRunCommandPolicy244E1613": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-run-command-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleSanitytests32F32A70",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TargetGroupSanitytests819368DF": {
      "Properties": {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 9000,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "App",
            "Value": "sanity-tests",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/content-api-sanity-tests",
          },
          {
            "Key": "Stack",
            "Value": "content-api-sanity-tests",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "SsmParameterValueaccountvpcPRODliveidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "UnhealthyInstancesAlarmSanitytestsCEC3C41B": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":",
                {
                  "Ref": "urgentalarmarnParameter",
                },
              ],
            ],
          },
        ],
        "AlarmDescription": "sanity-tests's instances have failed healthchecks several times over the last 1 hour.
      This typically results in the AutoScaling Group cycling instances and can lead to problems with deployment,
      scaling or handling traffic spikes.

      Check sanity-tests's application logs or ssh onto an unhealthy instance in order to debug these problems.",
        "AlarmName": "Unhealthy instances for sanity-tests in TEST",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 30,
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ListenerSanitytests3A57B767",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ListenerSanitytests3A57B767",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ListenerSanitytests3A57B767",
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
          },
          {
            "Name": "TargetGroup",
            "Value": {
              "Fn::GetAtt": [
                "TargetGroupSanitytests819368DF",
                "TargetGroupFullName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 60,
        "MetricName": "UnHealthyHostCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "WazuhSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/content-api-sanity-tests",
          },
          {
            "Key": "Stack",
            "Value": "content-api-sanity-tests",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueaccountvpcPRODliveidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
}
`;
